// <auto-generated>
// This file was automatically generated by Store Extensions Generator
// Do not modify this file directly - it will be overwritten
// </auto-generated>

using Unity.Entities;
using Unity.Mathematics;
using Unity.Collections;
using ECSReact.Core;

namespace ECSReact.Samples.SampleState
{
  /// <summary>
  /// Generated extension methods for Store that provide typed action dispatch methods.
  /// These methods eliminate boilerplate and provide IntelliSense support for action parameters.
  /// </summary>
  public static class StoreExtensions
  {
    /// <summary>
    /// Dispatch a SaveGameAction to the ECS world.
    /// </summary>
    /// <param name="fileName">The fileName value for the action.</param>
    /// <param name="includeSettings">The includeSettings value for the action.</param>
    /// <param name="compressData">The compressData value for the action.</param>
    /// <param name="createBackup">The createBackup value for the action.</param>
    /// <returns>True if the action was dispatched successfully, false if Store instance is not available.</returns>
    public static bool SaveGame(this Store store, FixedString128Bytes fileName, bool includeSettings, bool compressData, bool createBackup)
    {
      if (store == null)
      {
        UnityEngine.Debug.LogError("Store instance is null when dispatching SaveGameAction");
        return false;
      }

      var action = new SaveGameAction
      {
        fileName = fileName,
        includeSettings = includeSettings,
        compressData = compressData,
        createBackup = createBackup,
      };

      store.Dispatch(action);
      return true;
    }

    /// <summary>
    /// Dispatch a SaveGameAction using the Store singleton instance.
    /// </summary>
    /// <param name="fileName">The fileName value for the action.</param>
    /// <param name="includeSettings">The includeSettings value for the action.</param>
    /// <param name="compressData">The compressData value for the action.</param>
    /// <param name="createBackup">The createBackup value for the action.</param>
    /// <returns>True if the action was dispatched successfully, false if Store instance is not available.</returns>
    public static bool SaveGame(FixedString128Bytes fileName, bool includeSettings, bool compressData, bool createBackup)
    {
      if (Store.Instance == null)
      {
        UnityEngine.Debug.LogError("Store.Instance is null when dispatching SaveGameAction");
        return false;
      }

      return Store.Instance.SaveGame(fileName, includeSettings, compressData, createBackup);
    }

  }
}
