// <auto-generated>
// This file was automatically generated by ECSReact Bridge System Generator
// Do not modify this file directly - it will be overwritten
// Generated from: AttackLoggingMiddleware
// System type: StandardMiddleware
// Generated at: 2025-09-03 11:00:47
// </auto-generated>

using Unity.Entities;
using Unity.Burst;
using Unity.Collections;
using ECSReact.Core;
using ECSReact.Samples.BattleSystem;

namespace ECSReact.Samples.BattleSystem
{
  /// <summary>
  /// Generated bridge for standard middleware: AttackLoggingMiddleware
  /// Provides zero-allocation iteration for middleware processing.
  /// </summary>
  [UpdateInGroup(typeof(MiddlewareSystemGroup))]
  [UpdateBefore(typeof(SimulationSystemGroup))]
  internal partial class AttackLoggingMiddleware_AttackAction_Bridge : SystemBase
  {
    private AttackLoggingMiddleware middleware;

    protected override void OnCreate()
    {
      base.OnCreate();
      RequireForUpdate<AttackAction>();

      middleware = World.GetOrCreateSystemManaged<AttackLoggingMiddleware>();
      if (middleware.Enabled)
      {
        middleware.Enabled = false;
      }
    }

    protected override void OnUpdate()
    {
      // Zero-allocation iteration
      foreach (var (action, entity) in
               SystemAPI.Query<RefRO<AttackAction>>()
                 .WithAll<ActionTag>()
                 .WithEntityAccess())
      {
        middleware.ProcessAction(action.ValueRO, entity);
      }
    }
  }
}
